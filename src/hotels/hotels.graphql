type Hotel {
  # Example field (placeholder)
  id: number;
  name: string;
  address: string;
  images: string[];
  phone: string;
  email: string;
  price: number;
  facilities: string[];
  status: HotelStatus;
  description: string;
}

enum HotelStatus {
  INVALID
  AVAILABLE
  UNAVAILABLE
}

input CreateHotelInput {
  # Example field (placeholder)
  name: string;
  address: string;
  images: string[];
  phone: string;
  email: string;
  price: number;
  facilities: string[];
  status: HotelStatus;
  description: string;
}

input UpdateHotelInput {
  id: Int!
  name: string;
  address: string;
  images: string[];
  phone: string;
  email: string;
  price: number;
  facilities: string[];
  status: HotelStatus;
  description: string;
}

type Query {
  hotels: [Hotel]!
  hotel(id: Int!): Hotel
}

type Mutation {
  createHotel(createHotelInput: CreateHotelInput!): Hotel!
  updateHotel(updateHotelInput: UpdateHotelInput!): Hotel!
  removeHotel(id: Int!): Hotel
}