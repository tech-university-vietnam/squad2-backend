type Hotel {
  # Example field (placeholder)
  id: Int
  name: String
  address: String
  images: [String]
  phone: String
  email: String
  price: Int
  facilities: [String]
  status: HotelStatus
  description: String
}

enum HotelStatus {
  INVALID
  AVAILABLE
  UNAVAILABLE
}

input CreateHotelInput {
  # Example field (placeholder)
  name: String
  address: String
  images: [String]
  phone: String
  email: String
  price: Int
  facilities: [String]
  status: HotelStatus
  description: String
}

input UpdateHotelInput {
  id: Int!
  name: String
  address: String
  images: [String]
  phone: String
  email: String
  price: Int
  facilities: [String]
  status: HotelStatus
  description: String
}
input PaginationInput{
  limit: Int
  page: Int
}

input ListHotelsInput{
  paging: PaginationInput
  orderBy: String
  filterBy: String
}

type Meta{
    itemCount: Int
    totalItems: Int
    itemsPerPage: Int
    totalPages: Int
    currentPage: Int
  },

type Links{
    first: String
    last: String
    prev: String
    next: String
  },

type PaginationHotels {
  meta: Meta

  items: [Hotel]

  links: Links

}

type Query {
  hotels(listHotelsInput: ListHotelsInput): PaginationHotels!
  hotel(id: Int!): Hotel
}

type Mutation {
  createHotel(createHotelInput: CreateHotelInput!): Hotel!
  updateHotel(updateHotelInput: UpdateHotelInput!): Hotel!
  removeHotel(id: Int!): Hotel
}
